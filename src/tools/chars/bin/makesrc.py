import json
import glob
import argparse
import os
import binascii
import subprocess
import platform

def chunks(l, n):
    for i in range(0, len(l), n):
        yield l[i:i+n]

CHUNK_SIZE = 16

FN = '''
const uint8_t * getCustomChars() {
    return custom_chars_data;
}
'''




def main():
    with open('out/chars.h', 'w') as tfile:
        tfile.write("// autogenerated\n\n")
        tfile.write('#include <cstdint>\n')
        tfile.write('#pragma once\n')
        tfile.write('const uint8_t * getCustomChars();\n\n')
        i = 128

        name ='CUSTOM'
        tfile.write(f'#define CHARS_{name:16} {hex(i)}\n')
        with open('inputs/chars.ini') as sfile:
            data = sfile.read()
            for line in data.split():
                name = line.strip()
                if name:
                    tfile.write(f'#define CHARS_{name:16} {hex(i)}\n')
                i +=1


    with open('out/chars.bin', 'rb') as sfile:
        data = sfile.read()

    with open('out/chars.cpp', 'w') as tfile:
        tfile.write("// autogenerated\n\n")
        tfile.write('#include "chars.h"\n')
        tfile.write('const uint8_t custom_chars_data[]={\n' )
        for line in chunks(binascii.b2a_hex(data), CHUNK_SIZE):
            tfile.write('    ' + ','.join(['0x'+ch.decode("utf-8") for ch in chunks(line, 2)]))
            if len(line) == CHUNK_SIZE:
                tfile.write(',')
            tfile.write('\n')
        tfile.write('};\n')
        tfile.write(FN)

main()